/*
 * Created on Jun 15, 2005
 */
package uk.ac.stand.dcs.asa.networkmonitor.plugins;


import uk.ac.stand.dcs.asa.eventModel.eventBus.busInterfaces.EventConsumer;
import uk.ac.stand.dcs.asa.networkmonitor.core.events.EventBus;
import uk.ac.stand.dcs.asa.util.Diagnostic;

import javax.swing.*;

/**
 * A generic NetworkMonitor plugin.
 * 
 * @author gjh1
 */
public abstract class Plugin {
    /**
     * Prefix for error and diagnostic messages generated by plugins.
     */
    public static final String LOG_PREFIX = "[Plugin] ";

    /**
     * <code>boolean</code> to indicate if this plugin has a user interface.
     */
    protected static boolean hasUserInterface;

    /**
     * <code>JPanel</code> used by the plugin to display its user interface.
     */
    protected JPanel pluginPanel;

    /**
     * @return the friendly name of this plugin, as shown to users
     */
    public abstract String getFriendlyName();

    /**
     * @return the plugin's user interface display area
     */
    public JPanel getPluginPanel() {
        return pluginPanel;
    }
    
    /**
     * @return the system name of this plugin, as used by the plugin registry
     */
    public abstract String getSystemName();

    /**
     * @return the version of this plugin
     */
    public abstract String getVersion();

    /**
     * Load and initialise the plugin.
     */
    public void load() {
        Diagnostic.traceNoSource(LOG_PREFIX + getFriendlyName() + " (" + getVersion() + ") loaded.", Diagnostic.FINAL);
    }

    /**
     * Unload the plugin and free any resources it currently holds.
     */
    public void unload() {
        if (this instanceof EventConsumer)
            EventBus.getInstance().removeConsumer((EventConsumer) this);
        Diagnostic.traceNoSource(LOG_PREFIX + getFriendlyName() + " (" + getVersion() + ") unloaded.", Diagnostic.FINAL);
    }
}
